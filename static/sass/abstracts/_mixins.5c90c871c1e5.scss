
/*
* Prefixed by https://autoprefixer.github.io
* PostCSS: v7.0.29,
* Autoprefixer: v9.7.6
* Browsers: last 4 version
*/
@mixin break--ss--reversed {
    @media only screen and (max-width: $break--ss) {
        @content;
    }
}

@mixin break--ss {
    @media only screen and (min-width: $break--ss){
        @content;
    }
}

@mixin break--xs {
    @media only screen and (min-width: $break--xs){
        @content;
    }
}

@mixin break--sm {
    @media only screen and (min-width: $break--sm){
        @content;
    }
}

@mixin  break--md {
    @media only screen and (min-width: $break--md){
        @content;
    }
}

@mixin  break--lg {
    @media screen and (min-width: $break--lg){
        @content;
    }
}

@mixin  break--xl {
    @media only screen and (min-width: $break--xl){
        @content;
    }
}

@mixin  break--ll {
    @media only screen and (min-width: $break--ll){
        @content;
    }
}

@mixin keyframes($name) {
    @-webkit-keyframes #{$name} {
        @content;
    }

    @-moz-keyframes #{$name} {
        @content;
    }

    @keyframes #{$name} {
        @content;
    }
}

@mixin linear-gradient($direction, $color-stops) {
    // Direction has been omitted and happens to be a color-stop
    @if is-direction($direction) == false {
      $color-stops: $direction, $color-stops;
      $direction: 180deg;
    }
  
    background: nth(nth($color-stops, 1), 1);
    background: -webkit-linear-gradient(legacy-direction($direction), $color-stops);
    background: linear-gradient($direction, $color-stops);
  }

@mixin keyframes($name) {
    @-webkit-keyframes #{$name} {
        @content;
    }

    @-moz-keyframes #{$name} {
        @content;
    }

    @keyframes #{$name} {
        @content;
    }
}

@mixin gradient($start-color, $end-color, $orientation) {
    background: $start-color;
    @if $orientation == 'vertical' {
      background: -webkit-gradient(linear, left top, left bottom, from($start-color), to($end-color));
      background: -o-linear-gradient(top, $start-color, $end-color);
      background: linear-gradient(to bottom, $start-color, $end-color);
    } @else if $orientation == 'horizontal' {
      background: -webkit-gradient(linear, left top, right top, from($start-color), to($end-color));
      background: -o-linear-gradient(left, $start-color, $end-color);
      background: linear-gradient(to right, $start-color, $end-color);
    } @else {
      background: -o-radial-gradient(center, ellipse, $start-color, $end-color);
      background: radial-gradient(ellipse at center, $start-color, $end-color);
    }
}

@mixin linear-gradient($direction, $color-stops) {
    @if is-direction($direction) == false {
        $color-stops: $direction, $color-stops;
        $direction: 180deg;
      }
    background: nth(nth($color-stops, 1), 1);
    background: -webkit-gradient(linear, left top, left bottom, from($direction), to($color-stops));
    background: -o-linear-gradient($direction, $color-stops);
    background: linear-gradient($direction, $color-stops);
  }